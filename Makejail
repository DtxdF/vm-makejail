ARG is_public_vm=0
ARG exclude_ports?

OPTION start
OPTION overwrite=force
OPTION virtualnet=:<name> default
OPTION nat
OPTION resolv_conf=resolv.conf
OPTION mount_devfs
OPTION device=include \$devfsrules_hide_all
OPTION device=include \$devfsrules_unhide_basic
OPTION device=include \$devfsrules_unhide_login
OPTION device=path pf unhide
OPTION device=path vmm unhide
OPTION device=path 'vmm/*' unhide
OPTION device=path vmm.io unhide
OPTION device=path 'vmm.io/*' unhide
OPTION device=path 'nmdm*' unhide
OPTION device=path 'tap*' unhide
OPTION device=path mem unhide
OPTION device=path kmem unhide
OPTION device=path pci unhide
OPTION device=path io unhide
OPTION template=template.conf
OPTION volume=vm-data mountpoint:/vm

VAR --make-arg-env JAIL_NAME=${APPJAIL_JAILNAME}

CMD mkdir -p /usr/local/etc/pkg/repos
COPY PKG.conf /usr/local/etc/pkg/repos/PKG.conf

PKG vm-bhyve-devel bhyve-firmware tmux

SYSRC vm_enable=YES
SYSRC vm_dir=/vm

RAW if appjail cmd local "${APPJAIL_JAILNAME}" [ ! -f vm/.done ]; then
        CMD mkdir -p /vm && \
            find /vm -depth 1 -not -name '.img' -and -not -name '.iso' -exec rm -rf {} + && \
            vm init && \
            cp /usr/local/share/examples/vm-bhyve/*.conf /vm/.templates && \
            sysrc -f /vm/.config/system.conf console=tmux
RAW fi

CMD echo "nat on eb_${JAIL_NAME} from {192.168.8.0/24} to any -> (eb_${JAIL_NAME})" > /etc/pf.conf
RAW if [ -n "${exclude_ports}" ]; then
        CMD echo "no rdr on eb_${JAIL_NAME} inet proto { tcp, udp } from any to (eb_${JAIL_NAME}:0) port ${exclude_ports}" >> /etc/pf.conf
RAW fi
RAW if [ "${is_public_vm}" != 0 ]; then
        CMD echo "rdr pass on eb_${JAIL_NAME} inet proto { tcp, udp } from any to (eb_${JAIL_NAME}:0) port 1:65535 -> 192.168.8.2 port 1:65535" >> /etc/pf.conf
RAW fi
CMD echo net.inet.ip.forwarding=1 >> /etc/sysctl.conf

CMD sysctl net.inet.ip.forwarding=1
SERVICE pf oneenable
SERVICE pf start

SYSRC "cloned_interfaces+=bridge0"
SYSRC ifconfig_bridge0_name=vmbridge
SYSRC "ifconfig_vmbridge=inet 192.168.8.1/24"

CMD service netif cloneup bridge0 && \
    service netif start bridge0 && \
    service netif start vmbridge

RAW if appjail cmd local "${APPJAIL_JAILNAME}" [ ! -f vm/.done ]; then
        CMD vm switch create -t manual -b vmbridge public
RAW fi

STAGE stop

CMD rm -f /vm/*/run.lock
